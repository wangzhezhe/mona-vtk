#!/bin/bash
#SBATCH --qos=debug
#SBATCH --nodes=10
#SBATCH --tasks-per-node=32
#SBATCH --time=5:00
#SBATCH --licenses=cscratch1
#SBATCH --constraint=haswell

# this is the no elasticity script
# the configuration can be adjusted for different cases
rm core
ulimit -c unlimited

export LEAVECONFIGPATH=./

export BUILDDIR=/global/cscratch1/sd/zw241/build_monavtk
export SRCDIR=/global/homes/z/zw241/cworkspace/src/mona-vtk

cd $BUILDDIR
rm dynamic_drc.config
rm dynamic_leader.config
rm dynamic_server_leader.config
rm *.png
rm elasticmb_*.log
rm clientleave.config*

rm elasticmb_noelasticclient_*.log
rm elasticmb_noelasticserver_*.log

# key envs
PROTOCOL=gni

CLIENT_INIT_NODE=4
CLIENT_INIT_NUM=32
CLIENT_DYNAMIC_NUM=5

# server nodes
SERVERNODE=1
# set this value to 2 at least
# otherwise there are issue to add new process, there is an extra bcast call
SERVERPROCESS=2
CONFIG=$SRCDIR/example/leaderworker/pipeline/monaconfig.json
SCRIPTPAT1=$SRCDIR/example/MandelbulbColza/pipeline/mbrender_64_iso.py
SCRIPTPAT2=$SRCDIR/example/MandelbulbColza/pipeline/gridwriter.py

# block config
BLOCKLENW=64
BLOCKLENH=64
BLOCKLEND=64
BLOCKNUM=256


# copy the script used for in-situ execution
cp $SCRIPTPAT1 .
cp $SCRIPTPAT2 .
cp $SRCDIR/example/leaderworker/pipeline/test/addprocess.sh .

# start the colza server firstly, no join
srun -C haswell -N $SERVERNODE -n $SERVERPROCESS -c 8 -l --cpu_bind=cores --time=10:00 ./example/leaderworker/teststagingserver \
            -a gni \
            -t 4 \
            -v debug \
            -g 0 &> elasticmb_noelasticserver_$SERVERPROCESS.log &

echo "srun is called for elasticserver init at $(date)"

# make sure the leader start
while [ ! -f dynamic_server_leader.config ]
do
  sleep 1 
done

#make sure the server load the pipeline
result=0
while [ $result -ne $SERVERPROCESS ]
do
    result=$(cat elasticmb_noelasticserver_"$SERVERPROCESS".log | grep "Server running at" | wc -l)
    echo "$result server loaded backend"
    sleep 1  
done


# start the sim clients
srun -C haswell -N $CLIENT_INIT_NODE -l -n $CLIENT_INIT_NUM -c 8 --cpu_bind=cores --time=10:00 ./example/leaderworker/elasticmbleaderworker \
              -a gni \
              -v info \
              -t 4 \
              -i 10 \
              --initjoin $CLIENT_DYNAMIC_NUM \
              -b $BLOCKNUM -w $BLOCKLENW -p $BLOCKLEND -e $BLOCKLENH &> elasticmb_noelasticclient_init.log &

# when there is multiple thread, start the dynamic case
# check the drc file existance
# start others when leader engine start
while [ ! -f dynamic_leader.config ]
do
  sleep 1 
done

sleep 1

# the dynamic part for the client for initilisation
x=1
while [ $x -le $CLIENT_DYNAMIC_NUM ]
do
  srun -C haswell -N 1 -l -n 1 -c 8 --cpu_bind=cores --time=10:00 ./example/leaderworker/elasticmbleaderworker \
              -a gni \
              -v info \
              -t 4 \
              -i 10 \
              --initjoin $CLIENT_DYNAMIC_NUM -j \
              -b $BLOCKNUM -w $BLOCKLENW -p $BLOCKLEND -e $BLOCKLENH &> elasticmb_noelasticclient_add$x.log &
  x=$(( $x + 1 ))
done

wait
